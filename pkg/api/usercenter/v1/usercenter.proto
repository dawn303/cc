syntax = "proto3";

package usercenter.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

option go_package = "github.com/dawn303/cc/pkg/api/usercenter/v1;v1";

service UserCenter{
  rpc Login(LoginRequest) returns (LoginReply) {
    option (google.api.http) = {
      post: "/v1/auth/login",
      body: "*",
    };
  }
    // CreateUser
    rpc CreateUser(CreateUserRequest) returns (UserReply) {
      option (google.api.http) = {
        post: "/v1/users",
        body: "*",
      };
    }
  
    // ListUser
    rpc ListUser(ListUserRequest) returns (ListUserResponse) {
      option (google.api.http) = {get: "/v1/users"};
    }
  
    // DeleteUser
    rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {delete: "/v1/users/{username}"};
    }  
}

message UserReply {
  string userID = 1;
  string username = 2;
  string nickname = 3;
  string password = 4;
  string email = 5;
  string phone = 6;
  int64 secrets = 7;
  google.protobuf.Timestamp createdAt = 8;
  google.protobuf.Timestamp updatedAt = 9;
}

message LoginRequest {
  string username = 1;
  string password = 2;
}

message LoginReply {
  string refresh_token = 1;
  string access_token = 2;
  string type = 3;
  int64 expiresAt = 4;
}

message DeleteUserRequest {
  string username = 1;
}

message ListUserRequest {
  int64 limit = 1;
  int64 offset = 2;
}

message ListUserResponse {
  int64 totalCount = 1;
  repeated UserReply Users = 2;
}

message CreateUserRequest {
  string username = 1 [(validate.rules).string = {min_len: 1, max_len: 253}];
  string nickname = 2 [(validate.rules).string = {min_len: 1, max_len: 253}];
  string password = 3 [(validate.rules).string = {min_len: 6, max_len: 16}];
  string email = 4 [(validate.rules).string.email = true];
  string phone = 5 [(validate.rules).string.len = 11];
}
